<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cherp.app.buss.mapper.PurchaseChitMapper">
	
	<!-- 구매전표 전표 상태별 조회  by sm-->
	<select id="selectPurchaseChitState" resultType="com.cherp.app.buss.vo.PurchaseChitVO">
		SELECT purcslip_no
            ,insert_date
            ,client_code
            ,client_name
            ,wit_bacct
            ,supply_price
            ,vat
            ,pur_summary
            ,employee_name
            ,employee_code
            ,find_code(slip_state) as slip_state
		FROM purchase_chit
		WHERE slip_state = #{slipState}
		ORDER BY insert_date desc
	</select>

    <!-- 선택된 거래처 계약품목리스트 조회 -->
    <select id="selectContractItem" resultType="com.cherp.app.stck.vo.ContractItemVO">
        SELECT
                b.item_code,
                b.item_name,
                b.price,
                b.stocks_quantity,
                b.supply_price,
                b.vat,
                b.con_no,
                b.item_code,
                b.total_price,
                b.image,
                b.total_price as total_price_hidden,
                b.supply_price as supply_price_hidden,
                b.vat as vat_hidden
        FROM contract a
        JOIN contract_item b ON a.con_no = b.con_no
        JOIN client c ON a.client_code = c.client_code
        WHERE client_name = #{clientName}
    </select>

    <!-- 수량에 맞게 가격 변화 -->
    <select id="selectContractQuantity" resultType="com.cherp.app.stck.vo.ContractItemVO">
        SELECT item_name,
                price * #{quantity} as price,
                stocks_quantity * #{quantity} as stocks_quantity,
                supply_price * #{quantity} as supply_price,
                vat * #{quantity} as vat,
                con_no,
                item_code,
                total_price * #{quantity} as total_price,
                image
        FROM contract_item
    </select>

    <!-- 구매전표 등록 -->
    <insert id="insertPurchase" parameterType="com.cherp.app.buss.vo.PurchaseChitVO">
        <selectKey keyProperty="purcslipNo" resultType="String" order="BEFORE">
            SELECT domain('purcslip_no') FROM DUAL
        </selectKey>
        INSERT
        INTO purchase_chit (
            purcslip_no,
            insert_date,
            client_code,
            client_name,
            wit_bacct,
            employee_name,
            employee_code,
            supply_price,
            vat,
            restocking_price
        )
        VALUES (
            #{purcslipNo},
            sysdate,
            #{clientCode},
            #{clientName},
            #{witBacct},
            #{employeeName},
            #{employeeCode},
            #{supplyPrice},
            #{vat},
            #{totalPrice}
        )
    </insert>

    <!-- 구매내역 등록 -->
    <insert id="insertPurchaseHistory" parameterType="com.cherp.app.buss.vo.PurchaseHistoryVO">
        INSERT
        INTO purchase_history (
             pur_no,
             purcslip_no,
             wh_code,
             wh_name,
             item_code,
             item_name,
             quantity,
             restocking_price,
             restocking_date,
             incomplete_quantity
        )
        VALUES (
            DOMAIN('pur_no'),
            #{purcslipNo},
            #{whCode},
            #{whName},
            #{itemCode},
            #{itemName},
            #{quantity},
            #{restockingPrice},
            sysdate + 5,
            #{quantity}
        )
    </insert>

    <!-- 구매전표 조회 -->
    <select id="selectPurchaseChit" resultType="com.cherp.app.buss.vo.PurchaseChitVO">
        WITH b as (SELECT purcslip_no, SUM(restocking_price) total_price
                    FROM purchase_history
                    GROUP BY purcslip_no)
        SELECT
                a.purcslip_no,
                insert_date,
                client_code,
                client_name,
                total_price,
                supply_price,
                vat
        FROM purchase_chit a JOIN b ON a.purcslip_no = b.purcslip_no
        ORDER BY a.purcslip_no DESC
    </select>

    <!-- 구매전표 검색 -->
    <select id="searchPurchaseChit" resultType="com.cherp.app.buss.vo.PurchaseChitVO">
        SELECT a.purcslip_no
        ,insert_date
        ,client_code
        ,client_name
        ,supply_price
        ,employee_name
        ,employee_code
        ,vat
        ,slip_state
        FROM purchase_chit a JOIN purchase_history b
        ON a.purcslip_no = b.purcslip_no
        WHERE 1 = 1
        <if test="insertDate != null">
            AND a.insert_date >=  #{insertDate} AND a.insert_date <![CDATA[ < ]]> #{insertDate} + 1
        </if>
        <if test="restockingDate != null">
            AND b.restocking_date = #{restockingDate} AND b.restocking_date <![CDATA[ < ]]> #{restockingDate} + 1
        </if>
        <if test="clientName != null">
            AND a.client_name LIKE '%' || #{clientName} || '%'
        </if>
        <if test="itemName != null">
            AND b.item_name LIKE '%' || #{itemName} || '%'
        </if>
    </select>

    <!-- 구매전표별 구매내역 보기-->
    <select id="selectPurchaseHistory" resultType="com.cherp.app.buss.vo.PurchaseHistoryVO">
        SELECT
            b.pur_no,
            a.purcslip_no,
            a.supply_price,
            a.vat,
            b.item_name,
            b.quantity,
            b.restocking_price,
            FIND_CODE(b.restocking_status) restocking_status,
            b.restocking_date,
            c.wh_name
        FROM purchase_chit a JOIN purchase_history b
        ON a.purcslip_no = b.purcslip_no
        JOIN warehouse c
        ON c.wh_code = b.wh_code
        WHERE a.purcslip_no = #{purcslipNo}
    </select>

</mapper>