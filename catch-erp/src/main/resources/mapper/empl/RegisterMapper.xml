<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cherp.app.empl.mapper.RegisterMapper">
    <!-- 부서목록 조회 -->
	<select id="selectAllDepartment" resultType="com.cherp.app.empl.vo.DepartmentVO">
		WITH count_list AS (
        SELECT department_code,
               COUNT(employee_code) AS count
        FROM employees
        GROUP BY department_code)
        
        SELECT dp.department_code,
		       dp.department_name,
		       dp.manager_code,
		       em.name,
               NVL(cl.count,0) AS COUNT
		FROM   department dp
		LEFT JOIN   employees em
		ON     dp.manager_code = em.employee_code
        LEFT JOIN count_list cl
        ON dp.department_code = cl.department_code
	</select>
	
	<!-- 부서단건 조회 -->
	<select id="selectDepartment" parameterType="com.cherp.app.empl.vo.DepartmentVO">
		SELECT dp.department_code,
		       dp.department_name,
		       dp.manager_code,
		       em.name
		FROM   department dp
		JOIN   employees em
		ON     dp.manager_code = em.employee_code
		WHERE  dp.department_code = #{departmentCode}
	</select>
	
	
	<!-- 부서단건 수정 -->
	<update id="updateDepartment" parameterType="com.cherp.app.empl.vo.DepartmentVO">
		UPDATE department
		SET department_code = #{departmentCode},
		    department_name = #{departmentName},
		    manager_code = #{managerCode}
		WHERE department_code = #{departmentCode}
	</update>
	<!-- 부서목록 페이지의 부서등록  -->
	<insert id="insertDepartment" parameterType="com.cherp.app.empl.vo.DepartmentVO">
		INSERT INTO department(
		                       department_code
		                       ,department_name
		                       ,manager_code
		                       )
		VALUES (
				#{departmentCode}
		        ,#{departmentName}
                ,#{managerCode}
		        )
	</insert>

	<!-- 부서목록의 부서삭제 -->
	<delete id="deleteDepartment" parameterType="java.util.ArrayList">
		DELETE FROM department
		WHERE department_code IN
		<foreach collection="array" item="departmentCode" open="(" separator="," close=")">
			#{departmentCode}
		</foreach>
	</delete>
	
	<!-- 근태항목 조회 -->
	<select id="selectAttItemList" resultType="com.cherp.app.empl.vo.AttItemVO" >
        WITH count_list AS (
        SELECT count(att_history_code) AS count,
               att_code
        FROM   att_history
        GROUP BY att_code
        )
        
        SELECT ai.att_code,
		       ai.att_status,
		       ai.att_name,
               cc.common_name,
               NVL(cl.count,0) AS count
		FROM   att_item ai
        JOIN   common_code cc
        ON     ai.att_status = cc.code_rule
        LEFT JOIN count_list cl
        ON ai.att_code = cl.att_code

	</select>
	
	<!-- 근태항목 단건조회 -->
	<select id="selectAttItem" parameterType="string" resultType="com.cherp.app.empl.vo.AttItemVO">
		SELECT att_code,
		       att_status,
		       att_name
		FROM   att_item
		WHERE  att_code = #{attCode}
	</select>
	
	<!-- 근태항목 등록 -->
	<insert id="insertAttItem" parameterType="com.cherp.app.empl.vo.AttItemVO">
		INSERT INTO att_item (att_code
		                     ,att_status
		                     ,att_name)
		                     
		VALUES               (#{attCode}
		                     ,#{attStatus}
		                     ,#{attName})                     
	
	</insert>
	<!-- 근태항목 수정 -->
	<update id="updateAttItem" parameterType="com.cherp.app.empl.vo.AttItemVO">
		UPDATE att_item
		SET   att_code = #{attCode},
		      att_status = #{attStatus},
		      att_name = #{attName}
		WHERE att_code = #{attCode}
	</update>
	<!-- 근태항목 다건삭제 -->
	<delete id="deleteAttItem" parameterType="java.util.ArrayList">
		DELETE FROM att_item
		WHERE att_code IN
		<foreach collection="array" item="attCode" open="(" separator="," close=")">
			#{attCode}
		</foreach>
	</delete>

	<!-- 수당항목 -->
	<!-- 수당조회 -->
	<select id="selectAllowanceItemList" resultType="com.cherp.app.empl.vo.AllowanceVO">
        WITH fixed_list AS (
        SELECT allowance_code,
               count(fixed_no) AS fl_count
        FROM   fixed
        GROUP BY allowance_code)
        
		SELECT ai.allowance_code,
               ai.allowance_name,
               ai.allowance_check,
               NVL(fl_count,0) AS count
        FROM   allowance_item ai
        LEFT JOIN fixed_list fl
        ON ai.allowance_code = fl.allowance_code
	</select>
	<!-- 수당단건조회 -->
	
	<!-- 수당항목 단건조회 -->
	<select id="selectAllowanceItem" parameterType="string" resultType="com.cherp.app.empl.vo.AllowanceVO">
		SELECT allowance_code,
		       allowance_name,
		       allowance_check
		FROM   allowance_item
		WHERE  allowance_code = #{allowanceCode}
	</select>
	
	<!-- 수당항목 등록 -->
	<insert id="insertAllowanceItem" parameterType="com.cherp.app.empl.vo.AllowanceVO">
		INSERT INTO allowance_item (allowance_code
		                     ,allowance_name
		                     ,allowance_check)
		                     
		VALUES               (#{allowanceCode}
		                     ,#{allowanceName}
		                     ,#{allowanceCheck})                     
	
	</insert>
	
	<!-- 수당항목 수정 -->
	<update id="updateAllowanceItem" parameterType="com.cherp.app.empl.vo.AllowanceVO">
		UPDATE allowance_item
		SET   allowance_code = #{allowanceCode},
		      allowance_name = #{allowanceName},
		      allowance_check = #{allowanceCheck}
		WHERE allowance_code = #{allowanceCode}
	</update>
	
	<!-- 수당항목 다건삭제 -->
	<delete id="deleteAllowanceItem" parameterType="java.util.ArrayList">
		DELETE FROM allowance_item
		WHERE allowance_code IN
		<foreach collection="array" item="allowanceCode" open="(" separator="," close=")">
			#{allowanceCode}
		</foreach>
	</delete>
	
	
	<!-- 공제항목 -->
	
	<!-- 공제조회 -->
	<select id="selectDeductionsItemList" resultType="com.cherp.app.empl.vo.DeductionsVO">
		SELECT deductions_code,
               deductions_name,
               deductions_deductible
        FROM   deductions_item 
        WHERE  deductions_name <![CDATA[ <>  ]]> '소득세'
	</select>
	<!-- 소득세조회 -->
	<select id="selectIncomeTaxList" resultType="com.cherp.app.empl.vo.DeductionsVO">
		SELECT   deductions_code,
                 deductions_name,
                 deductions_deductible,
                 minval,
                 maxval,
                 income_tax
        FROM     deductions_item 
        WHERE    deductions_name = '소득세'
        ORDER BY minval
	</select>
	
	<!-- 공제항목 단건조회 -->
	<select id="selectDeductionsItem" parameterType="string" resultType="com.cherp.app.empl.vo.DeductionsVO">
		SELECT deductions_code,
		       deductions_name,
		       deductions_deductible,
		       minval,
               maxval,
               income_tax
		FROM   deductions_item
		WHERE  deductions_code = #{deductionsCode}
	</select>
	<!-- 소득세 단건조회 -->
	
	<!-- 공제항목 수정 -->
	<update id="updateDeductionsItem" parameterType="com.cherp.app.empl.vo.DeductionsVO">
		UPDATE deductions_item
		<set>
			  deductions_code = #{deductionsCode},
		      deductions_name = #{deductionsName},
		      deductions_deductible = #{deductionsDeductible},
		
      	   <if test="minval != null">
	           minval = #{minval},
	       </if>
      	   <if test="maxval != null">
	           maxval = #{maxval},
	       </if>
      	   <if test="incomeTax != null">
	           income_tax = #{incomeTax},
	       </if>
		</set>
		WHERE deductions_code = #{deductionsCode}
	</update>
	
</mapper>