<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 재고조정 mapper -->
<mapper namespace="com.cherp.app.stck.mapper.StockMapper">
	
	<!-- 매입계약품목 전체조회 -->
	<select id="selectAllItemList" resultType="com.cherp.app.stck.vo.ContractItemVO">
		SELECT *
		FROM   contract_item	
	</select>
	
	<!-- 구매내역 조건조회 --> <!-- 작성중.. -->
	<select id="selectAllPurchaseSeachList" resultType="PurchaseHistoryVO">
		SELECT *
		FROM purchase_history
		WHERE purchase
	</select>
	
	<!-- 구매내역 조회시 필요한 조회 조건에 맞는 구매전표번호 조회 -->
	<select id="selectPurcSlipNoList" resultType="PurchaseChitVO">
		SELECT purcslip_no
		FROM   purchase_chit
		WHERE  
			<choose>
				<when test="type1.equals('code')">
				client_code = #{client} 
				</when>
				<otherwise>
				client_name LIKE CONCAT(#{client}, '%')
				</otherwise>
			</choose>
			<choose>
				<when test="type2.equals('code')">
					AND employee_code = #{employee}
				</when>
				<otherwise>
					AND employee_name LIKE CONCAT(#{employee}, '%')
				</otherwise>
			</choose>
	</select>
	
	<!-- 조건검색된 구매전표번호로 구매내역을 조회 -->
	<select id ="selectPurcHistoryList" parameterType ="map" resultType="PurchaseHistoryVO">
		SELECT hi.pur_no
			   ,hi.wh_code
			   ,hi.wh_name
			   ,hi.item_code
			   ,hi.item_name
			   ,hi.quantity
			   ,hi.restocking_price
			   ,hi.restocking_status
			   ,hi.restocking_date
			   ,hi.incomplete_quantity
			   ,hi.purcslip_no
			   ,ch.client_code
			   ,ch.client_name
			   ,ct.stocks_quantity
		FROM   purchase_history hi JOIN purchase_chit ch 
			ON (hi.purcslip_no = ch.purcslip_no) JOIN contract_item ct ON (hi.item_code = ct.item_code)
		WHERE hi.purcslip_no IN
	    <foreach item="purcNo" collection="chitNoArr" open="(" separator="," close=")">
	        #{purcNo}
	    </foreach>
	    <choose>
	    	<when test="type3.equals('code')">
	    		AND hi.item_code = #{item}
	    	</when>
	    	<otherwise>
	    		AND hi.item_name LIKE CONCAT(#{item}, '%')
	    	</otherwise>
	    </choose>
	    <if test="!startDate.equals('noDate')">
	    		AND hi.restocking_date > TO_DATE(#{startDate},'yyyy-MM-dd')
	    </if>
	    <if test="!endDate.equals('noDate')">
	    	 <![CDATA[ 
	    		AND hi.restocking_date < TO_DATE(#{endDate}, 'yyyy-MM-dd')
	     	 ]]>
	    </if>
	    AND hi.restocking_status != 'b3'
	    ORDER BY hi.restocking_date DESC
	</select>
	
	<!-- 판매내역조회 -->
	<select id="selectSalesHistoryList" parameterType="map" resultType="SalesHistoryVO">
		SELECT hi.sales_no
			  ,hi.wh_code
			  ,hi.wh_name
			  ,hi.item_code
			  ,hi.item_name
			  ,hi.quantity
			  ,hi.delivery_price
			  ,hi.delivery_status
			  ,hi.delivery_date
			  ,hi.incomplete_quantity
			  ,hi.saleslip_no
			  ,hi.acc
			  ,ch.client_code
			  ,ch.client_name
			  ,ct.stocks_quantity
		FROM   saleslip_history hi JOIN sales_chit ch 
			ON (hi.saleslip_no = ch.saleslip_no)
			   JOIN contract_item ct 
			ON (hi.item_code = ct.item_code)	
		WHERE  hi.saleslip_no IN ( SELECT  saleslip_no
									 FROM  sales_chit
									 <where>
									 <choose>
									 	<when test="!clientCode.equals('no')">
									 		AND client_code = #{clientCode}
									 	</when>  
									 	<otherwise>
									 		AND client_name LIKE CONCAT(#{clientName}, '%')
									 	</otherwise>
									 </choose>
									 <choose>
									 	<when test="!employeeCode.equals('no')">
									 		AND employee_code = #{employeeName}
									 	</when>  
									 	<otherwise>
									 		AND employee_name LIKE CONCAT(#{employeeName}, '%')
									 	</otherwise>
									 </choose>
									 </where>
			 ) <!-- 서브쿼리 End Point -->
			<choose>
		    	<when test="!itemCode.equals('no')">
		    		AND hi.item_code = #{itemCode}
		    	</when>
		    	<otherwise>
		    		AND hi.item_name LIKE CONCAT(#{itemName}, '%')
		    	</otherwise>
		    </choose>
		    <if test="!startDate.equals('no')">
		    		AND hi.delivery_date > TO_DATE(#{startDate}, 'yyyy-MM-dd')
		    </if>
		    <if test="!endDate.equals('no')">
		    	 <![CDATA[ 
		    		AND hi.delivery_date < TO_DATE(#{endDate}, 'yyyy-MM-dd')
		     	 ]]>
		    </if>
		    AND delivery_status != 'b3'
		    ORDER BY hi.delivery_date DESC   
	</select>
	
	<insert id="insertAdjustment" statementType="CALLABLE">
		CALL stocksadjust_insert(
							#{StocksAdjustVO, mode=IN, typeHandler=com.cherp.app.stck.vo.StockAdjustArrayStructHandler},							
							)
	</insert>
	
</mapper>